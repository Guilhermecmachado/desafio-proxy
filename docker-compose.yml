version: '3.8'

services:
  app:
    build:
      context: ./app
    volumes:
      - ./app:/usr/src/app               # Mapeia o código-fonte da aplicação
      - /usr/src/app/node_modules        # Volume anônimo para evitar sobrescrita do node_modules
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy       # Aguarda até que o MySQL esteja saudável

  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: test
    volumes:
      - db_data:/var/lib/mysql           # Volume persistente do MySQL para manter os dados
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Arquivo de inicialização SQL no MySQL
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
    depends_on:
      - app  # Aguarda o app estar iniciado antes do nginx

networks:
  app-network:
    driver: bridge

volumes:
  db_data:  # Volume para o banco de dados
